version: '2'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.2.0
    container_name: elasticsearch

    hostname: elasticsearch
    restart: unless-stopped
    environment:
      - cluster.name=docker-cluster
      - node.name=node1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms384m -Xmx384m"
      - "cluster.initial_master_nodes=node1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:7.2.0
    container_name: logstash
    hostname: logstash
    restart: always
    volumes:
      - ./logstash/data:/usr/share/logstash/data:rw
      - ./logstash/template:/usr/share/logstash/template:ro
      #- ./logstash/logs:/usr/share/logstash/logs:rw
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "127.0.0.1:5000:5000/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    
    depends_on:
      - elasticsearch

  logspout:

    image: bekt/logspout-logstash
    container_name: logspout
    hostname: logspout
    restart: always
    environment:
      ROUTE_URIS: logstash+tcp://logstash:5000
    depends_on:
      - logstash
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
   

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.2.0
    container_name: kibana
    hostname: kibana
    environment:
      SERVER_NAME: kibana_server
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    volumes:
      - /kiibana:/kiibana


  zookeeper:

    image: wurstmeister/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    

  kafka:
    image: wurstmeister/kafka:2.11-0.11.0.3
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
    volumes:
      - /0610:/0610
    

  jupyter:
    image: jupyter/all-spark-notebook 
    container_name: jupyter
    hostname: jupyter
    ports:
      - "8889:8888"
    command: start-notebook.sh --NotebookApp.token=''
    volumes:

      - ./jupyter:/home/jovyan/work
    

  ksql-server:
    image: confluentinc/cp-ksql-server:5.2.1
    container_name: ksql-server
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  

  ksql-cli:
    image: confluentinc/cp-ksql-cli:5.2.1
    container_name: ksql-cli
    depends_on:
      - kafka
      - ksql-server
    entrypoint: /bin/sh
    tty: true
  







